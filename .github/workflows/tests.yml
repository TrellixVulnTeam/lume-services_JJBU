name: Tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
        run:
          shell: bash
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          mamba-version: "*"
          channels: conda-forge
          activate-environment: lume-services-dev
          environment-file: dev-environment.yml

      #- name: flake8
      #  shell: bash -l {0}
      #  run: |
      #    flake8 .

      - name: Install lume-services
        shell: bash -l {0}
        run: |
          pip install -e .

      - name: Run Tests
        shell: bash -l {0}
        run: |
          mkdir coverage
          pytest --cov-report term --cov=lume_services --junitxml=./coverage/pytest.xml | tee ./coverage/pytest-coverage.txt
        env:
          COVERAGE_FILE: coverage/ubuntu-latest-${{ matrix.python-version }}

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./coverage/pytest-coverage.txt
          junitxml-path: ./coverage/pytest.xml

      - name: Check the output coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"

      - name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.PYTEST_COVERAGE_COMMENT }}
          gistID: 5e90d640f8c212ab7bbac38f72323f80
          filename: pytest-coverage-comment__main.json
          label: Coverage Report
          message: ${{ steps.coverageComment.outputs.coverage }}
          color: ${{ steps.coverageComment.outputs.color }}
          namedLogo: python
